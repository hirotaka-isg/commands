■基本的な操作
git init
	リポジトリの初期化
	.gitディレクトリが作成され現在のディレクトリ以下を管理するリポジトリデータがが格納される

git status
	Gitリポジトリの状態を表示する

git add [ファイル名]
	Gitリポジトリの管理対象とするためにステージ領域にファイルを登録

git commit
	ステージ領域に登録されている時点のファイルをリポジトリの歴史として記録
	この記録をもとにワーキングツリーに復元したりすることが可能

	詳細なコミットメッセージの記録
		１行目：コミットする変更内容のようやくを１行で記述
		２行目：空行
		３行目：変更した理由や内容を記述

	コミットの中止
		コミットメッセージを書かずにエディタを終了させる

git log
	リポジトリにコミットされたログを確認できる
git log --pretty=short
	１行目の要約だけのメッセージを表示する
git log [ファイル名 or ディレクトリ名]
	指定したディレクトリ、ファイルのみのログを表示する
git log -p [falename]
	ファイルの差分を表示

git diff
	変更差分を確認
	現在のワークツリーとステージ領域の差分を確認する
git diff HEAD
	ワークツリーと最新コミットの差分を確認

■ブランチの操作
git branch
	ブランチを一覧表示
	現在いるブランチに[*]がついている

git checkout -b
	ブランチを作成し切り替える
	
	feature-A ブランチに切り替えコミットする
	git checkout -b feature-A
		下記コマンドと同じ動き
		git branch feature-A
		git checkout feature-A
	
	masterブランチへ切り替える
	git checkout master
	
	1前のブランチに切り替える
	git checkout -

git merge
	ブランチをマージ
git merge --no-ff feature-A
	feature-Aブランチを実装完了としてmasterブランチにマージ
	--no-ff：ブランチからマージしたことを記録する

git log --graph
	ブランチを視覚的に確認

■コミットを変更する操作
git reset　--head [ハッシュ]
	リポジトリのHEAD、ステージ、現在のワーキングツリーを指定した状態まで戻す

git commit --amend
	直前のコミットメッセージを修正

git rebase -i
	歴史を押しつぶして改変

■リモートリポジトリへの送信
git remote add origin [リモートリポジトリ]
	リモートリポジトリの登録

git push
	リモートリポジトリへの送信
git push　-u origin feature-D
	リモートリポジトリではmasterブランチ以外のブランチも作成可能
		例
		ローカルでgit checkout -b feature-Dを実行
		git push -u origin feature-Dでリモートリポジトリにもfeature-Dブランチを作成

■リモートリポジトリから取得
git clone [リモートリポジトリ]

git pull
	最新のリモートリポジトリブランチを取得


